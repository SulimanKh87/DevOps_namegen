name: build-and-deploy-eks

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: namegen
  EKS_CLUSTER_NAME: namegen-auto
  K8S_NAMESPACE: namegen

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 ||           aws ecr create-repository --repository-name "$ECR_REPOSITORY"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region "$AWS_REGION" --name "$EKS_CLUSTER_NAME"

      - name: Deploy manifests
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGISTRY="$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
          sed -i "s|<AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com|$REGISTRY|g" k8s/app-deployment.yaml
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/mongodb-init-configmap.yaml
          kubectl apply -f k8s/mongodb-service.yaml
          kubectl apply -f k8s/mongodb-statefulset.yaml
          kubectl apply -f k8s/app-deployment.yaml
          kubectl apply -f k8s/app-service.yaml

      - name: Wait for rollout
        run: |
          kubectl -n "$K8S_NAMESPACE" rollout status deploy/namegen-app --timeout=180s
          kubectl -n "$K8S_NAMESPACE" get svc namegen-service -o wide
